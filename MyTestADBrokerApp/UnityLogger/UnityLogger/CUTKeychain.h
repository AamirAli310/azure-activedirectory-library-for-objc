/*
 Copyright (c) Microsoft. All rights reserved.
 
 Synopsis: This file abstracts the calls to the keychain
 
 Owner: izikl
 Created: 05/22/2014
 */

#import <Foundation/Foundation.h>

/**
 @details Keychain error codes.
 */
typedef NS_ENUM(NSInteger, CUTKeychainError)
{
    CUTKeychainErrorKeyAlreadyExists = 1011,
    CUTKeychainErrorValueNotFound = 1012,
    CUTKeychainErrorGeneric = 1013,
};

/**
 @details A wrapper around the keychain. For more information about the keychain API and explanation about accessGroup, service, account, kSecClassGenericPassword please see Apple's Documentation.
 */
@interface CUTKeychain : NSObject

/**
 @details query the keychain and return a keychain item as NSData. accessGroup, service and account are the primaery keys for this type of search. This method assumes that kSecClassGenericPassword is used. kSecClassGenericPassword is normally used to store passwords but it can actually store any NSData object.
 @param accessGroup The access group. For more info see Apple's Keychain Docs.
 @param service The service. For more info see Apple's Keychain Docs.
 @param account The account. For more info see Apple's Keychain Docs.
 @param error an out parameter that hold nil on success. Note that object not found will not return an error, it will simply return a nil object. If nil need to be set as a value use NSNull
 @return the keychain item or nil item wasn't found.
 */
+ (NSData *)keychainItemWithAccessGroup:(NSString *)accessGroup
                       serviceAttribute:(NSString *)service
                       accountAttribute:(NSString *)account
                                  error:(NSError **)error;

/**
 @details Adds a keychain item. accessGroup, service and account are used as the the primaery key. This method assumes that kSecClassGenericPassword is used. kSecClassGenericPassword is normally used to store passwords but it can actually store any NSData object.
 @param data The keychain item to add.
 @param accessGroup The access group. For more info see Apple's Keychain Docs.
 @param service The service. For more info see Apple's Keychain Docs.
 @param account The account. For more info see Apple's Keychain Docs.
 @return Nil on success otherwise the error. Error code can be either CUTKeychainErrorGeneric or CUTKeychainErrorKeyAlreadyExists.
 */
+ (NSError *)           addData:(id)data
      toKeychainWithAccessGroup:(NSString *)accessGroup
               serviceAttribute:(NSString *)service
               accountAttribute:(NSString *)account;

/**
 @details Updates a keychain item. accessGroup, service and account are used as the the primaery key. This method assumes that kSecClassGenericPassword is used. kSecClassGenericPassword is normally used to store passwords but it can actually store any NSData object.
 @param data The updated keychain item.
 @param accessGroup The access group. For more info see Apple's Keychain Docs.
 @param service The service. For more info see Apple's Keychain Docs.
 @param account The account. For more info see Apple's Keychain Docs.
 @return Nil on success otherwise the error. Error code can be either CUTKeychainErrorGeneric or CUTKeychainErrorValueNotFound.
 */
+ (NSError *)        updateData:(id)data
      inKeychainWithAccessGroup:(NSString *)accessGroup
               serviceAttribute:(NSString *)service
               accountAttribute:(NSString *)account;

/**
 @details Adds a keychain item if it doesn't exist in the key chain, otherwise update it. accessGroup, service and account are used as the the primaery key. This method assumes that kSecClassGenericPassword is used. kSecClassGenericPassword is normally used to store passwords but it can actually store any NSData object.
 @param data The keychain item to add or udpate.
 @param accessGroup The access group. For more info see Apple's Keychain Docs.
 @param service The service. For more info see Apple's Keychain Docs.
 @param account The account. For more info see Apple's Keychain Docs.
 @return Nil on success otherwise the error. Error code can be CUTKeychainErrorGeneric. This method will trace the underline error.
 */
+ (NSError *)   updateOrAddData:(id)data
      toKeychainWithAccessGroup:(NSString *)accessGroup
               serviceAttribute:(NSString *)service
               accountAttribute:(NSString *)account;

/* 
 @details returns the bundle seed ID of the current app. 
 @note The App ID is the combination of a Bundle Seed ID and a Bundle Identifier. The Bundle Seed ID is a universally unique, ten-character, alphanumeric string. Its value is generated by Apple within the iOS Provisioning Portal.
 @example in the App ID "ABCDE12345.com.acme.awesomeApp" ABCDE12345 is the bundle seed ID.
 */
+ (NSString *)bundleSeedID;

/*
 @details Retrieves keychain certificate using a certificate serial number.
 @param accessGroup  The access group. For more info see Apple's Keychain Docs.
 @param service      The service. For more info see Apple's Keychain Docs.
 @param serialNumber Serial Number of the certificate.
 @param error        nil on Succeess.
 @return Certificate body on success, otherwise Nil.
 */
+ (NSData*)keychainCertificateWithAccessGroup:(NSString *)accessGroup
                             serviceAttribute:(NSString *)service
                                 serialNumber:(NSData *)serialNumber
                                        error:(NSError **)error;

@end
